/*
 * Copyright (c) 2018 Nam Nguyen, nam@ene.im
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *  
 *        http://www.apache.org/licenses/LICENSE-2.0
 *        
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import kohii.BuildConfig
import kohii.Libs

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
// apply plugin: 'com.getkeepsafe.dexcount'

android {
  compileSdkVersion BuildConfig.compileSdkVersion

  defaultConfig {
    minSdkVersion BuildConfig.minSdkVersion
    targetSdkVersion BuildConfig.targetSdkVersion
    versionCode BuildConfig.releaseVersionCode
    versionName BuildConfig.releaseVersionName

    buildConfigField("String", "LIB_NAME", "\"" + "Kohii, v" + versionName + "\"")

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles 'consumer-rules.pro'
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

configurations {
  all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

afterEvaluate { project ->
  project.tasks.dokka {
    outputDirectory = "$rootDir/docs/api"
    outputFormat = "gfm"
  }
}

dependencies {
  implementation Libs.ExoPlayer.core

  implementation Libs.Kotlin.stdlibJdk8
  implementation Libs.AndroidX.appcompat
  implementation Libs.AndroidX.coreKtx
  implementation Libs.AndroidX.collectionKtx
  implementation Libs.AndroidX.Fragment.fragmentKtx
  implementation Libs.AndroidX.recyclerView
  implementation Libs.AndroidX.viewPager
  implementation Libs.AndroidX.viewPager2
  implementation Libs.AndroidX.coordinatorLayout
  // implementation Libs.Google.material
  implementation Libs.AndroidX.Lifecycle.extensions
  implementation Libs.AndroidX.Lifecycle.service
  api Libs.AndroidX.Lifecycle.java8
  // kapt Libs.AndroidX.Lifecycle.compiler

  // Required -- JUnit 4 framework
  testImplementation Libs.Common.junit
  // Optional -- Mockito framework
  // testImplementation 'org.mockito:mockito-core:2.24.0'
  testImplementation Libs.Common.robolectric
  testImplementation Libs.Common.mockitoKotlin

  // Common library
  androidTestImplementation Libs.Kotlin.stdlibJdk7
  androidTestImplementation Libs.AndroidX.recyclerView

  // AndroidJUnitRunner and JUnit Rules
  androidTestImplementation Libs.AndroidX.Test.core
  androidTestImplementation Libs.AndroidX.Test.runner
  androidTestImplementation Libs.AndroidX.Test.rules

  // Assertions
  androidTestImplementation Libs.Common.junitExt
  // androidTestImplementation 'androidx.test.ext:truth:1.1.0'
  // androidTestImplementation 'com.google.truth:truth:0.42'

  // Espresso dependencies
  androidTestImplementation Libs.AndroidX.Test.espressoCore
  // androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'
  // androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
  // androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.1.1'
  // androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.1'
  // androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.1.1'

  // The following Espresso dependency can be either "implementation"
  // or "androidTestImplementation", depending on whether you want the
  // dependency to appear on your APK's compile classpath or the test APK
  // classpath.
  // androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.1.1'
}

// Doesn't work well with Kotlin
tasks.withType(Javadoc).all {
  enabled = false
}

project.archivesBaseName = "kohii-core"
// apply from: rootProject.file('gradle/publish.gradle')
apply from: rootProject.file('gradle/release_bintray_official.gradle')
