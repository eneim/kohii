/*
 * Copyright (c) 2018 Nam Nguyen, nam@ene.im
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import kohii.BuildConfig
import kohii.Libs

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'

if (file("google-services.json").exists()) {
  System.out.println("google-services.json found!")
  apply plugin: 'com.google.gms.google-services'
  apply plugin: 'com.google.firebase.crashlytics'
} else {
  System.out.println("google-services.json not found.")
}

android {
  compileSdkVersion BuildConfig.compileSdkVersion

  signingConfigs {
    release {
      keyAlias kohii_prodKeyAlias
      keyPassword prodKeyPassword
      storeFile file(prodStoreFile)
      storePassword prodStorePassword
    }

    debug {
      keyAlias "debug"
      keyPassword "android"
      storeFile file("debug.jks")
      storePassword "android"
    }
  }

  defaultConfig {
    applicationId "kohii.v1.sample"
    minSdkVersion 21 /* BuildConfig.minSdkVersion */
    targetSdkVersion BuildConfig.targetSdkVersion
    versionCode BuildConfig.releaseVersionCode
    versionName BuildConfig.releaseVersionName

    buildConfigField("String", "YT_API_KEY", "\"${kohii_yt_api_key}\"")

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    testApplicationId 'kohii.v1.sample.test'
  }

  buildTypes {

    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    debug {
      applicationIdSuffix ".dev"
      signingConfig signingConfigs.debug
      // multiDexEnabled true
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
          'proguard-rules-debug.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/DEPENDENCIES'
  }

  buildFeatures {
    viewBinding true
    dataBinding true
  }

  productFlavors {}

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = "1.8"
  }
}

configurations {
  all {
    exclude module: 'httpclient'
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation project(':kohii-core')
  implementation project(':kohii-exoplayer')
  implementation project(':kohii-androidx')
  implementation project(':kohii-experiments')
  implementation project(':kohii-ads')

  implementation Libs.ExoPlayer.all
  implementation Libs.ExoPlayer.imaExtension
  implementation Libs.AndroidX.Media.widget

  implementation Libs.Kotlin.stdlibJdk8
  // implementation Libs.Kotlin.reflect

  implementation Libs.AndroidX.coreKtx
  implementation Libs.AndroidX.Fragment.fragmentKtx
  implementation Libs.AndroidX.appcompat
  implementation Libs.AndroidX.recyclerView
  implementation Libs.AndroidX.recyclerViewSelection
  implementation Libs.AndroidX.constraintLayout
  implementation Libs.Google.material

  implementation Libs.AndroidX.Lifecycle.extensions
  implementation Libs.AndroidX.Lifecycle.runtime
  implementation Libs.AndroidX.Lifecycle.viewModel
  implementation Libs.AndroidX.Lifecycle.liveData
  implementation Libs.AndroidX.Lifecycle.java8

  implementation Libs.AndroidX.Paging.common
  implementation Libs.AndroidX.Paging.runtime

  implementation Libs.AndroidX.viewPager2

  implementation Libs.Square.moshi
  kapt Libs.Square.moshiCodegen
  implementation Libs.Square.okio

  implementation Libs.Glide.glide
  kapt Libs.Glide.compiler
  implementation Libs.Other.androidSvg

  implementation(Libs.Google.crashlytics) {
    transitive = true
  }

  implementation Libs.Google.youtubeApi
  implementation Libs.Google.httpClientAndroid
  implementation Libs.Google.apiClientAndroid
  implementation Libs.Google.apiClientGson
  implementation Libs.Google.firebaseAnalytics

  implementation(Libs.Other.timber)

  implementation Libs.Square.leakCanaryPlumber
  debugImplementation Libs.Square.leakCanary

  testImplementation Libs.Common.junit
  androidTestImplementation Libs.AndroidX.Test.core
  androidTestImplementation Libs.AndroidX.Test.espressoCore
}
