/*
 * Copyright (c) 2018 Nam Nguyen, nam@ene.im
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import kohii.Libs

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// apply plugin: 'com.getkeepsafe.dexcount'

androidExtensions {
  experimental = true
}

if (file("google-services.json").exists()) {
  System.out.println("has google-services.json")
  apply plugin: 'com.google.gms.google-services'
  apply plugin: 'io.fabric'
} else {
  System.out.println("google-services.json not found.")
}

android {
  compileSdkVersion buildConfig.compileSdk

  signingConfigs {
    release {
      keyAlias kohii_prodKeyAlias
      keyPassword prodKeyPassword
      storeFile file(prodStoreFile)
      storePassword prodStorePassword
    }

    debug {
      keyAlias "debug"
      keyPassword "android"
      storeFile file("debug.jks")
      storePassword "android"
    }
  }

  defaultConfig {
    applicationId "kohii.v1.sample"
    minSdkVersion 21 /* buildConfig.minSdk */
    targetSdkVersion buildConfig.targetSdk
    versionCode buildConfig.version.code
    versionName buildConfig.version.name

    manifestPlaceholders = [
        fabric_api_key: "${fabric_api_key}"
    ]

    buildConfigField("String", "YT_API_KEY", "\"${kohii_yt_api_key}\"")

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    testApplicationId 'kohii.v1.sample.test'
  }

  buildTypes {

    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    debug {
      applicationIdSuffix ".dev"
      signingConfig signingConfigs.debug
      // multiDexEnabled true
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
          'proguard-rules-debug.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/DEPENDENCIES'
  }

  dataBinding.enabled = true
  productFlavors {}
}

configurations {
  all {
    exclude module: 'httpclient'
    exclude group: 'com.google.guava', module: 'listenablefuture'
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation project(':kohii')

  implementation Libs.ExoPlayer.all

  implementation Libs.Kotlin.stdlibJdk7
  implementation Libs.Kotlin.reflect

  implementation Libs.AndroidX.coreKtx
  implementation Libs.AndroidX.Fragment.fragmentKtx
  implementation Libs.AndroidX.appcompat
  implementation Libs.AndroidX.recyclerView
  implementation Libs.AndroidX.recyclerViewSelection
  implementation Libs.AndroidX.constraintLayout
  implementation Libs.Google.material

  implementation Libs.AndroidX.Lifecycle.extensions
  implementation Libs.AndroidX.Lifecycle.runtime
  implementation Libs.AndroidX.Lifecycle.viewModel
  implementation Libs.AndroidX.Lifecycle.liveData

  implementation Libs.AndroidX.Paging.common
  implementation Libs.AndroidX.Paging.runtime

  implementation Libs.AndroidX.viewPager2

  testImplementation Libs.Common.junit
  androidTestImplementation Libs.AndroidX.Test.core
  androidTestImplementation Libs.AndroidX.Test.espressoCore

  implementation Libs.Square.moshi
  implementation Libs.Square.moshiKotlin
  implementation Libs.Square.okio

  implementation Libs.Glide.glide
  kapt Libs.Glide.compiler
  implementation Libs.Other.androidSvg

  debugImplementation Libs.Square.leakCanary

  implementation(Libs.Google.crashlytics) {
    transitive = true
  }

  implementation Libs.Google.youtubeApi
  implementation Libs.Google.httpClientAndroid
  implementation Libs.Google.apiClientAndroid
  implementation Libs.Google.apiClientGson

  implementation Libs.Google.firebaseCore
  implementation Libs.Other.youtubePlayer
}
