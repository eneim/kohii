/*
 * Copyright (c) 2021 Nam Nguyen, nam@ene.im
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id 'com.android.library'
  id 'kotlin-android'
  id 'kotlin-kapt'
  id 'kotlin-parcelize'
}

android {
  compileSdkVersion libs.versions.android.target.sdk.get().toInteger()

  defaultConfig {
    minSdkVersion libs.versions.android.min.sdk.get()
    targetSdkVersion libs.versions.android.target.sdk.get()
    versionCode libs.versions.release.code.get().toInteger()
    versionName libs.versions.release.name.get()

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles "consumer-rules.pro"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  buildFeatures {
    viewBinding true
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }
}

dependencies {
  implementation project(':kohii-core')
  implementation project(':kohii-exoplayer')
  implementation project(':kohii-androidx')
  implementation project(':kohii-experiments')
  implementation project(':kohii-ads')

  implementation(libs.android.exoplayer)
  implementation(libs.android.exoplayer.ima)
  implementation(libs.androidx.media2.widget)

  implementation(libs.androidx.core)
  implementation(libs.androidx.fragment)
  implementation(libs.androidx.appcompat)
  implementation(libs.androidx.recyclerview)
  implementation(libs.androidx.recyclerview.selection)
  implementation(libs.androidx.constraintlayout)
  implementation(libs.androidx.material)

  implementation(libs.androidx.lifecycle.process)
  implementation(libs.androidx.lifecycle.runtime)
  implementation(libs.androidx.lifecycle.viewmodel)
  implementation(libs.androidx.lifecycle.livedata)
  implementation(libs.androidx.lifecycle.java8)

  implementation(libs.androidx.paging.common)
  implementation(libs.androidx.paging.runtime)

  implementation(libs.androidx.viewpager2)

  implementation("com.squareup.moshi:moshi:1.14.0")
  kapt("com.squareup.moshi:moshi-kotlin-codegen:1.14.0")
  implementation("com.squareup.okio:okio:2.10.0")

  implementation("com.github.bumptech.glide:glide:4.13.2")
  kapt("com.github.bumptech.glide:compiler:4.13.2")
  implementation("com.caverock:androidsvg-aar:1.4")

  implementation("com.google.firebase:firebase-crashlytics-ktx:18.3.6") {
    transitive = true
  }

  implementation("com.google.apis:google-api-services-youtube:v3-rev20200618-1.30.9")
  implementation("com.google.http-client:google-http-client-android:1.35.0")
  implementation("com.google.api-client:google-api-client-android:1.30.9")
  implementation("com.google.api-client:google-api-client-gson:1.30.9")
  implementation("com.google.firebase:firebase-analytics:21.2.1")

  implementation("com.jakewharton.timber:timber:5.0.1")

  implementation("com.squareup.leakcanary:plumber-android:2.10")
  debugImplementation("com.squareup.leakcanary:leakcanary-android:2.10")

  testImplementation("androidx.test:core-ktx:1.5.0")
  testImplementation("androidx.test:rules:1.5.0")
  testImplementation("androidx.test:runner:1.5.2")

  androidTestImplementation("androidx.test.ext:junit-ktx:1.1.5")
  androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
}
